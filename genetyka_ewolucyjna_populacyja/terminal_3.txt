ln -s /home/st4/GEiP/lab_1/scaffold2.fasta* .

screen
conda activate GEiP

galgal=/home/mkonczal/Teaching/GEiP/Data/galGal6

scaffold=scaffold2.fasta

blastn -query ${scaffold} -db ${galgal}/Gallus_gallus.GRCg6a.dna_rm.toplevel.fa -outfmt 6 > Scaffold2Chicken.blastout

cut -f2 Scaffold2Chicken.blastout

cut -f2 Scaffold2Chicken.blastout | sort | uniq -c

---
  8 1
      2 10
      4 11
     12 12
      2 13
      2 14
   3966 2
      1 24
      9 27
      2 3
      1 33
      3 4
      3 5
      7 7
      1 8
      1 9

---

scores=/home/mkonczal/Teaching/GEiP/utilities/HoxD55

hom_chicken_chr=2

lastz ${galgal}/split/${hom_chicken_chr}.fa ${scaffold} --ambiguous=iupac --hspthresh=2200 --inner=2000 --ydrop=3400 --gappedthresh=10000 --scores=${scores} --chain --format=axt > bGalGal6_chr${hom_chicken_chr}.axt

alignment=bGalGal6_chr${hom_chicken_chr}.axt

chicken_2bit=${galgal}/Gallus_gallus.GRCg6a.dna_rm.toplevel.2bit

faToTwoBit scaffold2.fasta scaffold2.2bit 
biegus_2bit=scaffold2.2bit

axtChain -minscore=5000 -linearGap=loose $alignment $chicken_2bit $biegus_2bit bgalgalChr${hom_chicken_chr}_scaff2.chain

chainSort bgalgalChr${hom_chicken_chr}_scaff2.chain sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain

grep "chain" sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain | wc -l

--
1547
--

scaffold biegusa: scaffoldX.fasta
plik zawierający długość scaffoldu biegusa: scaffoldX.chrom.size
chromosom kury: X.fa
plik zawierający długość chromosomu kury: X.chrom.size

cp /home/st4/GEiP/lab_1/scaffold2.fasta .

awk '{print $1 "\t" $2}' scaffold2.fasta.fai > scaffold2.chrom.size

cp ${galgal}/split/${hom_chicken_chr}.fa .

tail -n +2 2.fa | tr -d '\n' | wc -c > 2.chrom.size
nano 2.chrom.size


chainNet sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain 2.chrom.size scaffold2.chrom.size all.net /dev/null

netChainSubset all.net sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain

gzip galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain


chCADD_dir=/home/mkonczal/Teaching/GEiP/Data/chCADD-scores

mkdir chCADD && cd chCADD

cp ${chCADD_dir}/Header.txt .
cp ${chCADD_dir}/2.txt.gz .
cat Header.txt > chr2_chCADD.tsv
zcat 2.txt.gz >> chr2_chCADD.tsv

awk '{print $1,$2-1,$2,$3,$4,$5}' chr2_chCADD.tsv > chr2_chCADD.1based.bed

rm chr2_chCADD.tsv

conda activate crossmap
scaffold=scaffold2

--
#nie trzeba robic
CrossMap bed galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain.gz chCADD/chr${hom_chicken_chr}_chCADD.1based.bed | head
--

CrossMap bed galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain.gz chCADD/chr${hom_chicken_chr}_chCADD.1based.bed | grep ${scaffold} | grep -v "Unmap" | cut -f 3,4,5,6,7,8 > chr${hom_chicken_chr}-SBS_CADD.bed

rm chCADD/*

